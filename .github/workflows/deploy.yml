name: Deploy to VPS

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests (if available)
      run: npm test || echo "No tests configured"
      
    - name: Create deployment package
      run: |
        tar -czf deployment.tar.gz \
          --exclude=node_modules \
          --exclude=.git \
          --exclude=.github \
          --exclude=*.log \
          --exclude=ilmai_deploy \
          --exclude=ilmai_deploy.pub \
          --exclude=*.ps1 \
          --exclude=*.bat \
          --exclude=secure-and-push.bat \
          --exclude=final-push.bat \
          --exclude=push-mobile-fix.bat \
          --exclude=push-now.bat \
          .
          
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          # Create application directory
          sudo mkdir -p /opt/ilmai
          cd /opt/ilmai

          # Backup current deployment (if exists)
          if [ -d "current" ]; then
            sudo mv current backup-$(date +%Y%m%d-%H%M%S) || true
          fi

          # Create new deployment directory
          sudo mkdir -p current
          sudo chown -R $USER:$USER /opt/ilmai

          # Ensure user is in docker group (for Docker commands)
          sudo usermod -aG docker $USER || true
          
    - name: Upload deployment package
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        source: "deployment.tar.gz"
        target: "/opt/ilmai/"
        
    - name: Extract and setup application
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          cd /opt/ilmai

          # Extract deployment package
          tar -xzf deployment.tar.gz -C current/
          rm deployment.tar.gz

          # Create environment file
          cat > current/.env << EOF
          NODE_ENV=production
          PORT=3000
          GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          LOG_LEVEL=2
          EOF

          # Set proper permissions
          sudo chown -R www-data:www-data current/
          sudo chmod -R 755 current/

          # Navigate to application directory
          cd current

          # Stop existing containers
          sudo docker-compose down || true

          # Build and start new containers
          sudo docker-compose up -d --build

          # Wait for application to start
          sleep 15

          # Health check
          if curl -f http://localhost:3000/api/health; then
            echo "✅ Deployment successful - Application is healthy"

            # Clean up old backups (keep last 3)
            cd /opt/ilmai
            ls -t backup-* 2>/dev/null | tail -n +4 | xargs sudo rm -rf || true
          else
            echo "❌ Deployment failed - Application health check failed"

            # Try to get container logs for debugging
            echo "=== Container Logs ==="
            sudo docker-compose logs --tail=50 || true
            exit 1
          fi
          
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "🚀 Deployment completed successfully!"
          echo "Application is now live at: https://ilmai.live"
        else
          echo "💥 Deployment failed!"
        fi
